certificates:
  metrics.test-kunde.t0.hosting.kitkube.dk:
    issuer:
      name: letsencrypt-prod
      kind: ClusterIssuer
    dnsNames:
      - metrics.test-kunde.t0.hosting.kitkube.dk
  alerts.test-kunde.t0.hosting.kitkube.dk:
    issuer:
      name: letsencrypt-prod
      kind: ClusterIssuer
    dnsNames:
      - alerts.test-kunde.t0.hosting.kitkube.dk
  prometheus.test-kunde.t0.hosting.kitkube.dk:
    issuer:
      name: letsencrypt-prod
      kind: ClusterIssuer
    dnsNames:
      - prometheus.test-kunde.t0.hosting.kitkube.dk

securedservices:
  prometheus-alertmanager:
    ingress:
      annotations:
        kubernetes.io/ingress.class: nginx
        # Cluster intern: 192.168.0.0/24
        # KIT: 80.208.24.138
        nginx.ingress.kubernetes.io/whitelist-source-range: 192.168.0.0/24,80.208.24.138
      hosts:
        - alerts.test-kunde.t0.hosting.kitkube.dk
      tls:
        - hosts:
           - alerts.test-kunde.t0.hosting.kitkube.dk
          secretName: alerts.test-kunde.t0.hosting.kitkube.dk
  prometheus-server:
    ingress:
      annotations:
        kubernetes.io/ingress.class: nginx
        # Cluster intern: 192.168.0.0/24
        # KIT: 80.208.24.138
        nginx.ingress.kubernetes.io/whitelist-source-range: 192.168.0.0/24,80.208.24.138
      hosts:
        - prometheus.test-kunde.t0.hosting.kitkube.dk
      tls:
        - hosts:
           - prometheus.test-kunde.t0.hosting.kitkube.dk
          secretName: prometheus.test-kunde.t0.hosting.kitkube.dk

prometheus:
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
  server:
    resources:
      limits:
        cpu: "1000m"
        memory: "512Mi"
    sidecarContainers:
      alerts-loader:
        env:
          - name: LABEL
            value: prometheusAlerts
          - name: FOLDER
            value: /tmp/
          - name: REQ_URL
            value: 'http://127.0.0.1:9090/-/reload'
          - name: REQ_METHOD
            value: POST
          - name: NAMESPACE
            value: ALL
        image: 'kiwigrid/k8s-sidecar:0.1.20'
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - mountPath: /tmp
            name: alerts-volume
      gatekeeper:
        args:
          - '--listen=0.0.0.0:8001'
          - '--enable-authorization-header=true'
          - '--upstream-url=http://localhost:9090'
          - '--client-id=prometheus'
          - '--discovery-url=https://keycloak.t0.hosting.kitkube.dk/auth/realms/infrastructure'
          - '--secure-cookie=false'
          - '--enable-default-deny=true'
          - '--client-secret=$(KCPClientOIDC)'
          - '--cookie-domain=.t0.hosting.kitkube.dk'
          - '--resources=uri=/*'
          - '--resources=uri=/api/*|white-listed=true'
          - '--resources=uri=/alerts|white-listed=true'
          - '--resources=uri=/static/*|white-listed=true'
        env:
          - name: KCPClientOIDC
            valueFrom:
              secretKeyRef:
                key: secret
                name: keycloakproxyclient
        image: 'keycloak/keycloak-gatekeeper:5.0.0'
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
        ports:
          - containerPort: 8001
            name: container-port
            protocol: TCP
    persistentVolume:
      enabled: true
      storageClass: longhorn
    ingress:
      enabled: false

  configmapReload:
    alertmanager:
      resources:
        limits:
          cpu: "1500m"
          memory: "512Mi"
    prometheus:
      resources:
        limits:
          cpu: "1000m"
          memory: "512Mi"
  alertmanager:
    resources:
      limits:
        cpu: "1500m"
        memory: "512Mi"
    persistentVolume:
      enabled: true
      storageClass: longhorn
    ingress:
      enabled: false
    sidecarContainers:
      - args:
          - '--listen=0.0.0.0:8001'
          - '--enable-authorization-header=true'
          - '--upstream-url=http://localhost:9090'
          - '--client-id=prometheus'
          - '--discovery-url=https://keycloak.t0.hosting.kitkube.dk/auth/realms/infrastructure'
          - '--secure-cookie=false'
          - '--enable-default-deny=true'
          - '--client-secret=$(KCPClientOIDC)'
          - '--cookie-domain=.t0.hosting.kitkube.dk'
          - '--resources=uri=/*'
          - '--resources=uri=/api/*|white-listed=true'
          - '--resources=uri=/alerts|white-listed=true'
          - '--resources=uri=/static/*|white-listed=true'
        env:
          - name: KCPClientOIDC
            valueFrom:
              secretKeyRef:
                key: secret
                name: keycloakproxyclient
        image: 'keycloak/keycloak-gatekeeper:5.0.0'
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: "1500m"
            memory: "512Mi"
        name: gatekeeper
        ports:
          - containerPort: 8001
            name: container-port
            protocol: TCP

  pushgateway:
    resources:
      limits:
        cpu: "1500m"
        memory: "512Mi"
    extraArgs:
      persistence.file: /data/metrics
      persistence.interval: 30s
    persistentVolume:
      enabled: true
      storageClass: longhorn
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        # Cluster intern: 192.168.0.0/24
        # KIT: 80.208.24.138
        nginx.ingress.kubernetes.io/whitelist-source-range: 192.168.0.0/24,80.208.24.138
      hosts:
        - metrics.test-kunde.t0.hosting.kitkube.dk
      tls:
        - hosts:
            - metrics.test-kunde.t0.hosting.kitkube.dk
          secretName: metrics.test-kunde.t0.hosting.kitkube.dk
